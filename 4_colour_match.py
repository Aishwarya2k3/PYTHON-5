# -*- coding: utf-8 -*-
"""4 colour match.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PCkO-Mv2wH0tCuScrBRtrp9tPAxpRgsM
"""

import random

# Define the colors and the number of attempts
colors = ["Red", "Green", "Blue", "Yellow", "Purple", "Orange"]
code_length = 4
attempts = 10

# Function to generate a random color code
def generate_code():
    return [random.choice(colors) for _ in range(code_length)]

# Function to get feedback on guesses
def get_feedback(code, guess):
    # Initialize counters
    correct_position = 0
    correct_color = 0

    # Copy code and guess to prevent modification
    code_copy = code[:]
    guess_copy = guess[:]

    # First pass: check for correct color and position
    for i in range(code_length):
        if guess_copy[i] == code_copy[i]:
            correct_position += 1
            # Remove matched items to avoid rechecking
            code_copy[i] = guess_copy[i] = None

    # Second pass: check for correct colors in the wrong position
    for color in guess_copy:
        if color and color in code_copy:
            correct_color += 1
            # Remove the matched color from the code copy to avoid multiple matches
            code_copy[code_copy.index(color)] = None

    return correct_position, correct_color

# Game function
def play_game():
    code = generate_code()
    print("Welcome to Mastermind 4 Color Match!")
    print(f"Possible colors: {', '.join(colors)}")
    print(f"Guess the color code (4 colors) in {attempts} attempts.\n")

    for attempt in range(1, attempts + 1):
        guess = input(f"Attempt {attempt}/{attempts} - Enter your guess (e.g., Red Green Blue Yellow): ").split()

        # Validate the guess
        if len(guess) != code_length or any(color not in colors for color in guess):
            print(f"Invalid input. Please enter exactly {code_length} colors from the list.")
            continue

        # Get feedback on the guess
        correct_position, correct_color = get_feedback(code, guess)
        print(f"Feedback: {correct_position} correct color(s) in the correct position, {correct_color} correct color(s) in the wrong position.")

        # Check if the player won
        if correct_position == code_length:
            print("Congratulations! You've cracked the code!")
            return

    print(f"Game over! The correct code was: {' '.join(code)}")

# Run the game
play_game()